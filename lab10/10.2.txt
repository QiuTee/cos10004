      mov R2, #1        ; 1sec delay time
      mov R9 , #2
      MOV R0, #.green
      MOV R1, #.white
reset: 
      mov R8, #0
rapid_flashes: 
      PUSH { R8 }
      BL flash 
jump: 
      add R8 , R8, #1 
      CMP R8, #3
      BLT rapid_flashes
      POP {R8}
      PUSH {R0}
pause:
      MOV R0 , R9 
      BL delay 
      POP {R0}
      BL reset
flash:
      MOV R7 , R2
      PUSH { R3}
      MOV R3 , R0 
      BL drawpixel 
      Pop {R3}
      PUSH {R3}
      MOV R3, R1
      BL drawpixel 
      Pop {R3}
      B jump
      HALT
drawpixel:
      PUSH {R7,R4}
      MOV R4, R7        ; copy delay time to R4
      STR R3, .Pixel367 ; draw pixel with colour
      PUSH {R0, LR}     ; backup R0 and LR before param pass and function call
      MOV R0, R4        ; pass delay time to delay function
      BL delay          ; call delay function
      Pop {R0, LR}      ; restore R0 and LR after function call
      Pop {R7,R4}
      RET 
delay:                  ; job done
      push {R3,R4,R5,R6}
      MOV R3, R0        ; move delay time param into R3
      LDR R4, .Time     ; get start ime
timer:
      LDR R5, .Time     ; update time
      SUB R6, R5, R4    ; calc elapsed time
      CMP R6, R3        ; compare elapsed to delay time
      BLT timer
      pop {R3,R4,R5,R6}
      RET
